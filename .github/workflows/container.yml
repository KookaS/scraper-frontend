name: Container

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, edited, synchronize, reopened]
    branches: [master]

env:
  COMMON_NAME: ${{ github.sha }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_PROFILE: ${{ vars.AWS_PROFILE }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  GH_ORG: KookaS
  GH_REPO: infrastructure-modules
  GH_BRANCH: master
  GH_SCRIPT_PATH: .github/workflows
  GH_INFRA_TOKEN: ${{ secrets.GH_INFRA_TOKEN }}
  AWS_CLI_SERVICE: ecr  # private

jobs:
  ecr:
    name: setup ECR
    runs-on: ubuntu-latest
    environment: KookaS
    env:
      SCRIPT_NAME: ecr-set.sh
      LOG_FILE: log.out
      DOCKER_FOLDER_PATH: Dockerfile
      IMAGE_TAG: "latest"
    outputs:
      IMAGE_TAG: ${{ steps.get-output.outputs.IMAGE_TAG }}
      ECR_LOGIN_PASSWORD: ${{ steps.get-output.outputs.ECR_LOGIN_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run script
        id: script
        run: |
          curl -L \
            -H "Accept: application/vnd.github.v3.raw" \
            -H "Authorization: Bearer $GH_INFRA_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$GH_ORG/$GH_REPO/contents/$GH_SCRIPT_PATH/$SCRIPT_NAME?ref=$GH_BRANCH > $SCRIPT_NAME && chmod +x $SCRIPT_NAME

          eval res=$(./$SCRIPT_NAME \
            LOG_FILE=$LOG_FILE \
            AWS_ACCESS_KEY=$AWS_ACCESS_KEY \
            AWS_SECRET_KEY=$AWS_SECRET_KEY \
            AWS_REGION=$AWS_REGION \
            AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID \
            COMMON_NAME=$COMMON_NAME \
            AWS_CLI_SERVICE=ecr \
            ECR_CREATE=true \
            IMAGE_TAG=$IMAGE_TAG \
            DOCKER_FOLDER_PATH=$DOCKER_FOLDER_PATH)

          echo -e '\033[46mLOGS\033[0m'; cat $LOG_FILE
          if [ -n "$(grep -i error $LOG_FILE)" ]; then
            echo -e '\033[41mERRORS\033[0m'; grep -ni error $LOG_FILE | sed 's/$/\n/'; exit 10
          fi

      - name: Get ECR login password
        id: get-output
        run: |
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
          if [[ $AWS_CLI_SERVICE == ecr ]]; then
            echo "ECR_LOGIN_PASSWORD=$(aws ecr get-login-password --region $AWS_REGION)" >> $GITHUB_OUTPUT
          elif [[ $AWS_CLI_SERVICE == ecr-public ]]; then
            echo "ECR_LOGIN_PASSWORD=$(aws ecr-public get-login-password --region $AWS_REGION)" >> $GITHUB_OUTPUT
          fi
          

  # Container network where we can access with the service name and the port
  project:
    name: Container check
    needs: [ecr]
    runs-on: ubuntu-latest
    container: ubuntu # connect the workflow steps to the network
    environment: KookaS
    env:
      HEALTHCHECK: /healthz
    services:
      local-project:
        image:  ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ github.sha }}:${{ needs.ecr.outputs.IMAGE_TAG }}
        # options: --read-only
        credentials:
          username: AWS
          password: ${{ needs.ecr.outputs.ECR_LOGIN_PASSWORD }}
        env:
          NEXT_PUBLIC_API_URL: not-needed # http://localhost:8080
          PORT: 3000

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup
        id: setup
        run: |
          apt update -qq
          apt install curl wget -y -qq
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64  -qq -O /usr/bin/yq && chmod +x /usr/bin/yq
          echo "PORT=$(yq eval '.port' config/config.yml)" >> $GITHUB_OUTPUT

      - name: Status root
        run: |
          curl -Is http://local-project:${{ steps.setup.outputs.PORT }}$ROOT | grep HTTP
      - name: Status healthz
        run: |
          curl -Is http://local-project:${{ steps.setup.outputs.PORT }}$HEALTHCHECK | grep HTTP

  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    needs: [ecr, project]
    if: ${{ always() && contains(join(needs.ecr.result, ','), 'success') }}
    environment: KookaS
    env:
      SCRIPT_NAME: ecr-clean.sh
      LOG_FILE: log.out

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run script
        id: script
        run: |
          curl -L \
            -H "Accept: application/vnd.github.v3.raw" \
            -H "Authorization: Bearer $GH_INFRA_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$GH_ORG/$GH_REPO/contents/$GH_SCRIPT_PATH/$SCRIPT_NAME?ref=$GH_BRANCH > $SCRIPT_NAME && chmod +x $SCRIPT_NAME

          eval res=$(./$SCRIPT_NAME \
            LOG_FILE=$LOG_FILE \
            AWS_ACCESS_KEY=$AWS_ACCESS_KEY \
            AWS_SECRET_KEY=$AWS_SECRET_KEY \
            AWS_REGION=$AWS_REGION \
            AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID \
            COMMON_NAME=$COMMON_NAME)

          echo -e '\033[46mLOGS\033[0m'; cat $LOG_FILE
          if [ -n "$(grep -i error $LOG_FILE)" ]; then
            echo -e '\033[41mERRORS\033[0m'; grep -ni error $LOG_FILE | sed 's/$/\n/'; exit 10
          fi